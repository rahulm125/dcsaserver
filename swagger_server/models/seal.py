# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.seal_source import SealSource  # noqa: F401,E501
from swagger_server.models.seal_type import SealType  # noqa: F401,E501
from swagger_server import util


class Seal(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, seal_source: SealSource=None, seal_type: SealType=None):  # noqa: E501
        """Seal - a model defined in Swagger

        :param seal_source: The seal_source of this Seal.  # noqa: E501
        :type seal_source: SealSource
        :param seal_type: The seal_type of this Seal.  # noqa: E501
        :type seal_type: SealType
        """
        self.swagger_types = {
            'seal_source': SealSource,
            'seal_type': SealType
        }

        self.attribute_map = {
            'seal_source': 'sealSource',
            'seal_type': 'sealType'
        }
        self._seal_source = seal_source
        self._seal_type = seal_type

    @classmethod
    def from_dict(cls, dikt) -> 'Seal':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The seal of this Seal.  # noqa: E501
        :rtype: Seal
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seal_source(self) -> SealSource:
        """Gets the seal_source of this Seal.


        :return: The seal_source of this Seal.
        :rtype: SealSource
        """
        return self._seal_source

    @seal_source.setter
    def seal_source(self, seal_source: SealSource):
        """Sets the seal_source of this Seal.


        :param seal_source: The seal_source of this Seal.
        :type seal_source: SealSource
        """

        self._seal_source = seal_source

    @property
    def seal_type(self) -> SealType:
        """Gets the seal_type of this Seal.


        :return: The seal_type of this Seal.
        :rtype: SealType
        """
        return self._seal_type

    @seal_type.setter
    def seal_type(self, seal_type: SealType):
        """Sets the seal_type of this Seal.


        :param seal_type: The seal_type of this Seal.
        :type seal_type: SealType
        """
        if seal_type is None:
            raise ValueError("Invalid value for `seal_type`, must not be `None`")  # noqa: E501

        self._seal_type = seal_type
