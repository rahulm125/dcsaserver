# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.latitude import Latitude  # noqa: F401,E501
from swagger_server.models.longitude import Longitude  # noqa: F401,E501
from swagger_server.models.un_location_code1 import UNLocationCode1  # noqa: F401,E501
from swagger_server import util


class Location(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, latitude: Latitude=None, longitude: Longitude=None, un_location_code: UNLocationCode1=None, address: Object=None):  # noqa: E501
        """Location - a model defined in Swagger

        :param latitude: The latitude of this Location.  # noqa: E501
        :type latitude: Latitude
        :param longitude: The longitude of this Location.  # noqa: E501
        :type longitude: Longitude
        :param un_location_code: The un_location_code of this Location.  # noqa: E501
        :type un_location_code: UNLocationCode1
        :param address: The address of this Location.  # noqa: E501
        :type address: Object
        """
        self.swagger_types = {
            'latitude': Latitude,
            'longitude': Longitude,
            'un_location_code': UNLocationCode1,
            'address': Object
        }

        self.attribute_map = {
            'latitude': 'latitude',
            'longitude': 'longitude',
            'un_location_code': 'UNLocationCode',
            'address': 'address'
        }
        self._latitude = latitude
        self._longitude = longitude
        self._un_location_code = un_location_code
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The location of this Location.  # noqa: E501
        :rtype: Location
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latitude(self) -> Latitude:
        """Gets the latitude of this Location.


        :return: The latitude of this Location.
        :rtype: Latitude
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: Latitude):
        """Sets the latitude of this Location.


        :param latitude: The latitude of this Location.
        :type latitude: Latitude
        """

        self._latitude = latitude

    @property
    def longitude(self) -> Longitude:
        """Gets the longitude of this Location.


        :return: The longitude of this Location.
        :rtype: Longitude
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: Longitude):
        """Sets the longitude of this Location.


        :param longitude: The longitude of this Location.
        :type longitude: Longitude
        """

        self._longitude = longitude

    @property
    def un_location_code(self) -> UNLocationCode1:
        """Gets the un_location_code of this Location.


        :return: The un_location_code of this Location.
        :rtype: UNLocationCode1
        """
        return self._un_location_code

    @un_location_code.setter
    def un_location_code(self, un_location_code: UNLocationCode1):
        """Sets the un_location_code of this Location.


        :param un_location_code: The un_location_code of this Location.
        :type un_location_code: UNLocationCode1
        """

        self._un_location_code = un_location_code

    @property
    def address(self) -> Object:
        """Gets the address of this Location.

        Address related information  # noqa: E501

        :return: The address of this Location.
        :rtype: Object
        """
        return self._address

    @address.setter
    def address(self, address: Object):
        """Sets the address of this Location.

        Address related information  # noqa: E501

        :param address: The address of this Location.
        :type address: Object
        """

        self._address = address
